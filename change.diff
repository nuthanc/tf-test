diff --git a/serial_scripts/k8s_auth/test_resource.py b/serial_scripts/k8s_auth/test_resource.py
index c288091..d89c5e0 100644
--- a/serial_scripts/k8s_auth/test_resource.py
+++ b/serial_scripts/k8s_auth/test_resource.py
@@ -46,7 +46,7 @@ class TestK8sResource(BaseK8sAuth):
         self.stackrc_dict = ResourceUtil.admin_stackrc()
         ResourceUtil.create_policy_and_perform_operations(
             resource_expectation=TestK8sResource.resource_expectation,
-            stackrc_dict=self.stackrc_dict, inputs=self.inputs)
+            stackrc_dict=self.stackrc_dict, inputs=self.inputs, connections=self.connections)
 
     @test.attr(type=['auth'])
     @preposttest_wrapper
@@ -64,7 +64,7 @@ class TestK8sResource(BaseK8sAuth):
         ResourceUtil.create_policy_and_perform_operations(
             match=match,
             resource_expectation=TestK8sResource.resource_expectation,
-            stackrc_dict=self.stackrc_dict, inputs=self.inputs)
+            stackrc_dict=self.stackrc_dict, inputs=self.inputs, connections=self.connections)
 
 
 class TestK8sResourceCustom(BaseK8sAuth):
@@ -105,7 +105,7 @@ class TestK8sResourceCustom(BaseK8sAuth):
             resource=resource,
             match=self.match,
             stackrc_dict=self.stackrc_dict,
-            resource_expectation=resource_expectation, inputs=self.inputs)
+            resource_expectation=resource_expectation, inputs=self.inputs, connections=self.connections)
 
     @test.attr(type=['auth'])
     @preposttest_wrapper
@@ -127,4 +127,4 @@ class TestK8sResourceCustom(BaseK8sAuth):
             resource=resource,
             match=self.match,
             stackrc_dict=self.stackrc_dict,
-            resource_expectation=resource_expectation, inputs=self.inputs)
+            resource_expectation=resource_expectation, inputs=self.inputs, connections=self.connections)
diff --git a/serial_scripts/k8s_auth/test_restart.py b/serial_scripts/k8s_auth/test_restart.py
index 1d1d889..e96f669 100644
--- a/serial_scripts/k8s_auth/test_restart.py
+++ b/serial_scripts/k8s_auth/test_restart.py
@@ -41,11 +41,11 @@ class TestRestart(BaseK8sAuth):
         stackrc_dict = ResourceUtil.admin_stackrc()
         ResourceUtil.create_policy_and_perform_operations(
             resource_expectation=TestRestart.resource_expectation,
-            stackrc_dict=stackrc_dict, inputs=self.inputs)
+            stackrc_dict=stackrc_dict, inputs=self.inputs, connections=self.connections)
         self.restart_kube_manager()
         ResourceUtil.create_policy_and_perform_operations(
             resource_expectation=TestRestart.resource_expectation,
-            stackrc_dict=stackrc_dict, inputs=self.inputs)
+            stackrc_dict=stackrc_dict, inputs=self.inputs, connections=self.connections)
 
     @test.attr(type=['auth'])
     @preposttest_wrapper
@@ -64,11 +64,11 @@ class TestRestart(BaseK8sAuth):
         stackrc_dict = ResourceUtil.admin_stackrc()
         ResourceUtil.create_policy_and_perform_operations(
             resource_expectation=TestRestart.resource_expectation,
-            stackrc_dict=stackrc_dict, inputs=self.inputs)
+            stackrc_dict=stackrc_dict, inputs=self.inputs, connections=self.connections)
         self.restart_vrouter_agent()
         ResourceUtil.create_policy_and_perform_operations(
             resource_expectation=TestRestart.resource_expectation,
-            stackrc_dict=stackrc_dict, inputs=self.inputs)
+            stackrc_dict=stackrc_dict, inputs=self.inputs, connections=self.connections)
 
     @test.attr(type=['auth'])
     @preposttest_wrapper
@@ -89,12 +89,12 @@ class TestRestart(BaseK8sAuth):
         ResourceUtil.create_policy_and_perform_operations(
             match=match,
             resource_expectation=TestRestart.resource_expectation,
-            stackrc_dict=stackrc_dict, inputs=self.inputs)
+            stackrc_dict=stackrc_dict, inputs=self.inputs, connections=self.connections)
         self.restart_kube_manager()
         ResourceUtil.create_policy_and_perform_operations(
             match=match,
             resource_expectation=TestRestart.resource_expectation,
-            stackrc_dict=stackrc_dict, inputs=self.inputs)
+            stackrc_dict=stackrc_dict, inputs=self.inputs, connections=self.connections)
 
     @test.attr(type=['auth'])
     @preposttest_wrapper
@@ -115,12 +115,12 @@ class TestRestart(BaseK8sAuth):
         ResourceUtil.create_policy_and_perform_operations(
             match=match,
             resource_expectation=TestRestart.resource_expectation,
-            stackrc_dict=stackrc_dict, inputs=self.inputs)
+            stackrc_dict=stackrc_dict, inputs=self.inputs, connections=self.connections)
         self.restart_vrouter_agent()
         ResourceUtil.create_policy_and_perform_operations(
             match=match,
             resource_expectation=TestRestart.resource_expectation,
-            stackrc_dict=stackrc_dict, inputs=self.inputs)
+            stackrc_dict=stackrc_dict, inputs=self.inputs, connections=self.connections)
 
     @test.attr(type=['auth'])
     @preposttest_wrapper
@@ -147,7 +147,7 @@ class TestRestart(BaseK8sAuth):
         stackrc_dict = ResourceUtil.admin_stackrc()
         ResourceUtil.create_policy_and_perform_operations(
             resource_expectation=TestRestart.resource_expectation,
-            stackrc_dict=stackrc_dict, inputs=self.inputs)
+            stackrc_dict=stackrc_dict, inputs=self.inputs, connections=self.connections)
 
 
 class TestRestartWithPodResource(BaseK8sAuth):
@@ -190,14 +190,14 @@ class TestRestartWithPodResource(BaseK8sAuth):
             match=self.match,
             stackrc_dict=self.stackrc_dict,
             resource_expectation=TestRestartWithPodResource.resource_expectation,
-            inputs=self.inputs)
+            inputs=self.inputs, connections=self.connections)
         self.restart_kube_manager()
         ResourceUtil.create_policy_and_perform_operations(
             resource=TestRestartWithPodResource.resource,
             match=self.match,
             stackrc_dict=self.stackrc_dict,
             resource_expectation=TestRestartWithPodResource.resource_expectation,
-            inputs=self.inputs)
+            inputs=self.inputs, connections=self.connections)
 
     @test.attr(type=['auth'])
     @preposttest_wrapper
@@ -218,11 +218,11 @@ class TestRestartWithPodResource(BaseK8sAuth):
             match=self.match,
             stackrc_dict=self.stackrc_dict,
             resource_expectation=TestRestartWithPodResource.resource_expectation,
-            inputs=self.inputs)
+            inputs=self.inputs, connections=self.connections)
         self.restart_vrouter_agent()
         ResourceUtil.create_policy_and_perform_operations(
             resource=TestRestartWithPodResource.resource,
             match=self.match,
             stackrc_dict=self.stackrc_dict,
             resource_expectation=TestRestartWithPodResource.resource_expectation,
-            inputs=self.inputs)
+            inputs=self.inputs, connections=self.connections)
diff --git a/tcutils/kubernetes/auth/create_policy.py b/tcutils/kubernetes/auth/create_policy.py
index 9446538..d99c3b9 100644
--- a/tcutils/kubernetes/auth/create_policy.py
+++ b/tcutils/kubernetes/auth/create_policy.py
@@ -4,7 +4,6 @@ import time
 import json
 from jinja2 import Environment, FileSystemLoader
 from common.contrail_test_init import ContrailTestInit
-
 from tcutils.kubernetes.auth.example_user import ExampleUser
 from tcutils.kubernetes.auth.util import Util
 from common import log_orig as contrail_logging
diff --git a/tcutils/kubernetes/auth/resource_util.py b/tcutils/kubernetes/auth/resource_util.py
index eecdbd4..1bb14fa 100644
--- a/tcutils/kubernetes/auth/resource_util.py
+++ b/tcutils/kubernetes/auth/resource_util.py
@@ -1,4 +1,6 @@
 
+from k8s.pod import PodFixture
+from k8s.deployment import DeploymentFixture
 from tcutils.kubernetes.auth import create_policy
 from tcutils.kubernetes.auth.util import Util
 from tcutils.kubernetes.auth.example_user import ExampleUser
@@ -73,6 +75,25 @@ class ResourceUtil(Util):
                         logger.error(error)
                     logger.error('Error while %s %s' % (resource, verb))
                     raise Exception(error)
+    
+    @staticmethod
+    def restart_core_dns(connections):
+        dep = DeploymentFixture(
+            connections, name='coredns', namespace='kube-system')
+        dep.read()
+        pods = dep.get_pods_list()
+        for pod in pods:
+            dns_pod = PodFixture(
+                connections, name=pod.metadata.name, namespace=pod.metadata.namespace)
+            dns_pod.delete_only()
+            dns_pod.verify_pod_is_not_in_k8s()
+        dep.read()
+        pods = dep.get_pods_list()
+        for pod in pods:
+            dns_pod = PodFixture(
+                connections, name=pod.metadata.name, namespace=pod.metadata.namespace)
+            dns_pod.wait_till_pod_is_up()
+
 
     @staticmethod
     def create_policy_and_perform_operations(
@@ -80,9 +101,11 @@ class ResourceUtil(Util):
             match=[],
             resource_expectation={},
             stackrc_dict={},
-            inputs=None):
+            inputs=None, connections=None):
         create_policy.create_and_apply_policies(
             resource=resource, match=match, inputs=inputs)
+        if connections:
+            ResourceUtil.restart_core_dns(connections)
         ResourceUtil.perform_operations(
             stackrc_dict, resource_expectation, inputs=inputs)
 
